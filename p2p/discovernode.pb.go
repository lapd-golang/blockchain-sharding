// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovernode.proto

package p2p

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingPong_Message int32

const (
	PingPong_PING PingPong_Message = 0
	PingPong_PONG PingPong_Message = 1
)

var PingPong_Message_name = map[int32]string{
	0: "PING",
	1: "PONG",
}
var PingPong_Message_value = map[string]int32{
	"PING": 0,
	"PONG": 1,
}

func (x PingPong_Message) String() string {
	return proto.EnumName(PingPong_Message_name, int32(x))
}
func (PingPong_Message) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_discovernode_3e4bca04d9341733, []int{0, 0}
}

type PingPong struct {
	Message              PingPong_Message `protobuf:"varint,1,opt,name=message,proto3,enum=p2p.PingPong_Message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PingPong) Reset()         { *m = PingPong{} }
func (m *PingPong) String() string { return proto.CompactTextString(m) }
func (*PingPong) ProtoMessage()    {}
func (*PingPong) Descriptor() ([]byte, []int) {
	return fileDescriptor_discovernode_3e4bca04d9341733, []int{0}
}
func (m *PingPong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingPong.Unmarshal(m, b)
}
func (m *PingPong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingPong.Marshal(b, m, deterministic)
}
func (dst *PingPong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingPong.Merge(dst, src)
}
func (m *PingPong) XXX_Size() int {
	return xxx_messageInfo_PingPong.Size(m)
}
func (m *PingPong) XXX_DiscardUnknown() {
	xxx_messageInfo_PingPong.DiscardUnknown(m)
}

var xxx_messageInfo_PingPong proto.InternalMessageInfo

func (m *PingPong) GetMessage() PingPong_Message {
	if m != nil {
		return m.Message
	}
	return PingPong_PING
}

func init() {
	proto.RegisterType((*PingPong)(nil), "p2p.PingPong")
	proto.RegisterEnum("p2p.PingPong_Message", PingPong_Message_name, PingPong_Message_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoverNodeClient is the client API for DiscoverNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoverNodeClient interface {
	Ping(ctx context.Context, in *PingPong, opts ...grpc.CallOption) (*PingPong, error)
}

type discoverNodeClient struct {
	cc *grpc.ClientConn
}

func NewDiscoverNodeClient(cc *grpc.ClientConn) DiscoverNodeClient {
	return &discoverNodeClient{cc}
}

func (c *discoverNodeClient) Ping(ctx context.Context, in *PingPong, opts ...grpc.CallOption) (*PingPong, error) {
	out := new(PingPong)
	err := c.cc.Invoke(ctx, "/p2p.DiscoverNode/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoverNodeServer is the server API for DiscoverNode service.
type DiscoverNodeServer interface {
	Ping(context.Context, *PingPong) (*PingPong, error)
}

func RegisterDiscoverNodeServer(s *grpc.Server, srv DiscoverNodeServer) {
	s.RegisterService(&_DiscoverNode_serviceDesc, srv)
}

func _DiscoverNode_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingPong)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoverNodeServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/p2p.DiscoverNode/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoverNodeServer).Ping(ctx, req.(*PingPong))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiscoverNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "p2p.DiscoverNode",
	HandlerType: (*DiscoverNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _DiscoverNode_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discovernode.proto",
}

func init() { proto.RegisterFile("discovernode.proto", fileDescriptor_discovernode_3e4bca04d9341733) }

var fileDescriptor_discovernode_3e4bca04d9341733 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xc9, 0x2c, 0x4e,
	0xce, 0x2f, 0x4b, 0x2d, 0xca, 0xcb, 0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2e, 0x30, 0x2a, 0x50, 0x8a, 0xe2, 0xe2, 0x08, 0xc8, 0xcc, 0x4b, 0x0f, 0xc8, 0xcf, 0x4b, 0x17,
	0xd2, 0xe7, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x33, 0x12, 0xd5, 0x2b, 0x30, 0x2a, 0xd0, 0x83, 0xc9, 0xeb, 0xf9, 0x42, 0x24, 0x83, 0x60, 0xaa,
	0x94, 0x64, 0xb9, 0xd8, 0xa1, 0x62, 0x42, 0x1c, 0x5c, 0x2c, 0x01, 0x9e, 0x7e, 0xee, 0x02, 0x0c,
	0x60, 0x96, 0xbf, 0x9f, 0xbb, 0x00, 0xa3, 0x91, 0x19, 0x17, 0x8f, 0x0b, 0xd4, 0x5a, 0xbf, 0xfc,
	0x94, 0x54, 0x21, 0x35, 0x2e, 0x16, 0x90, 0x59, 0x42, 0xbc, 0x28, 0xc6, 0x4a, 0xa1, 0x72, 0x95,
	0x18, 0x92, 0xd8, 0xc0, 0xee, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xd1, 0x21, 0xd5,
	0xb5, 0x00, 0x00, 0x00,
}
